name: Create all relevant containers (API+runner) and pushes them to docker.hub

on:
  push:
    branches:
      - main

jobs:
  set-vars:
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.writestep.outputs.sha_short }}
      foo: ${{ steps.writestep.outputs.foo }}
    steps:
      - uses: actions/checkout@v1
      - id: writestep
        name: Set enviroment
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "sha_short=HAHA$(git rev-parse --short "$GITHUB_SHA") --  $(GITHUB_SHA::7)" >> "$GITHUB_OUTPUT"
          echo "foo=bar" >> "$GITHUB_OUTPUT"

      - id: readstep
        name: Read enviroment
        shell: bash
        run: |
          echo "BRANCH: ${{ env.branch }}"
          echo "SHA_SHORT: ${{ env.sha_short }}"
          echo "secret: ${{ env.secret }}"
          echo "foobar: ${{ env.foobar }}"
          
  read-vars-on-another-job:
    runs-on: ubuntu-latest
    needs: set-vars
    steps:
      - name: Sample task to read vars
        env:
          sha_short: ${{needs.set-vars.outputs.sha_short}}
          foo: ${{needs.set-vars.outputs.foo}}
        shell: bash
        run: |
          echo "$sha_short $foo"
          echo "foobar: ${{ env.foobar }}"
          echo "sha: ${{ env.mysha }}"
          echo "sha: ${{ env }}"
          env
          
  build-api:
    runs-on: ubuntu-latest
    needs: set-vars
    if: "contains(github.event.head_commit.message, 'release me')"

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to Docker Hub
      run: echo ${{ secrets.DOCKERHUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

    - name: Build and push Docker image
      run: |
        cd api
        echo "da ist er ${{ env.sha_short }}"
        echo "hurra ${{ env.sha_short }}" > "git-version.txt"
        docker buildx create --use
        docker buildx build \
          --file Dockerfile \
          --tag jakez/vestascenes-api:latest \
          --push .

  build-runner:
    runs-on: ubuntu-latest
    needs: set-vars
    if: "contains(github.event.head_commit.message, 'release me')"

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      run: echo ${{ secrets.DOCKERHUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

    - name: Build and push Docker image
      run: |
        cd runner
        docker buildx create --use
        docker buildx build \
          --file Dockerfile \
          --tag jakez/vestascenes-runner:latest \
          --push .

    env:
      DOCKER_CLI_EXPERIMENTAL: enabled
      DOCKER_BUILDKIT: 1
